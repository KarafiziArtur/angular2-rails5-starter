{"version":3,"file":"app.bundle.js","sources":["webpack:///src/app.ts","webpack:///src/app/seed-app.ts","webpack:///src/app/components/home/home.ts","webpack:///src/app/components/about/about.ts","webpack:///src/app/components/repo-browser/repo-browser.ts","webpack:///src/app/components/repo-list/repo-list.ts","webpack:///src/app/services/github.ts","webpack:///./~/rxjs/add/operator/map.js","webpack:///./~/rxjs/operator/map.js","webpack:///src/app/components/repo-detail/repo-detail.ts"],"sourcesContent":["import {LocationStrategy, HashLocationStrategy} from '@angular/common';\r\nimport {bootstrap} from '@angular/platform-browser-dynamic';\r\nimport {provide, enableProdMode} from '@angular/core';\r\nimport {HTTP_PROVIDERS} from '@angular/http';\r\nimport {ROUTER_PROVIDERS} from '@angular/router-deprecated';\r\n\r\nimport {SeedApp} from './app/seed-app';\r\n\r\n\r\n// enableProdMode()\r\n\r\nbootstrap(SeedApp, [\r\n  HTTP_PROVIDERS,\r\n  ROUTER_PROVIDERS,\r\n  provide(LocationStrategy, {useClass: HashLocationStrategy})\r\n])\r\n.catch(err => console.error(err));\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app.ts\n **/","import {Component} from '@angular/core';\r\nimport {Router, RouteConfig, ROUTER_DIRECTIVES} from '@angular/router-deprecated';\r\n\r\nimport {Home} from './components/home/home';\r\nimport {About} from './components/about/about';\r\nimport {RepoBrowser} from './components/repo-browser/repo-browser';\r\n\r\n@Component({\r\n  selector: 'app',\r\n  providers: [],\r\n  pipes: [],\r\n  directives: [ROUTER_DIRECTIVES],\r\n  templateUrl: 'app/seed-app.html',\r\n})\r\n@RouteConfig([\r\n  { path: '/home',       component: Home,        name: 'Home', useAsDefault: true },\r\n  { path: '/about',      component: About,       name: 'About' },\r\n  { path: '/github/...', component: RepoBrowser, name: 'RepoBrowser' },\r\n])\r\nexport class SeedApp {\r\n\r\n  constructor() {}\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/seed-app.ts\n **/","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  templateUrl: '/app/components/home/home.html',\r\n  styleUrls: ['/app/components/home/home.css'],\r\n  providers: [],\r\n  directives: [],\r\n  pipes: []\r\n})\r\nexport class Home {\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/components/home/home.ts\n **/","import {Component} from '@angular/core';\r\nimport {Http} from '@angular/http';\r\n\r\n\r\n@Component({\r\n  selector: 'about',\r\n  templateUrl: '/app/components/about/about.html',\r\n  styleUrls: ['/app/components/about/about.css'],\r\n  providers: [],\r\n  directives: [],\r\n  pipes: []\r\n})\r\nexport class About {\r\n\r\n  constructor(http: Http) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/components/about/about.ts\n **/","import {Component} from '@angular/core';\r\nimport {Router, RouteConfig, ROUTER_DIRECTIVES} from '@angular/router-deprecated';\r\n\r\nimport {RepoList} from '../repo-list/repo-list';\r\nimport {RepoDetail} from '../repo-detail/repo-detail';\r\nimport {Github} from '../../services/github';\r\n\r\n@Component({\r\n  selector: 'repo-browser',\r\n  templateUrl: '/app/components/repo-browser/repo-browser.html',\r\n  styleUrls: ['/app/components/repo-browser/repo-browser.css'],\r\n  providers: [ Github ],\r\n  directives: [ ROUTER_DIRECTIVES ],\r\n  pipes: []\r\n})\r\n@RouteConfig([\r\n  {path: '/:org',       component: RepoList,   name: 'RepoList'},\r\n  {path: '/:org/:name', component: RepoDetail, name: 'RepoDetail' },\r\n])\r\nexport class RepoBrowser {\r\n\r\n  constructor(private router: Router, private github: Github) {}\r\n\r\n  searchForOrg(orgName: string) {\r\n    this.github.getOrg(orgName)\r\n      .subscribe(({name}) => {\r\n        console.log(name);\r\n        this.router.navigate(['RepoList', {org: orgName}]);\r\n      });\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/components/repo-browser/repo-browser.ts\n **/","import {Component} from '@angular/core';\r\nimport {Github} from '../../services/github';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {RouteParams, ROUTER_DIRECTIVES} from '@angular/router-deprecated';\r\n\r\n@Component({\r\n  selector: 'repo-list',\r\n  templateUrl: '/app/components/repo-list/repo-list.html',\r\n  styleUrls: ['/app/components/repo-list/repo-list.css'],\r\n  providers: [],\r\n  directives: [ ROUTER_DIRECTIVES ],\r\n  pipes: []\r\n})\r\nexport class RepoList {\r\n  repos: Observable<any>;\r\n  constructor(public github: Github, public params: RouteParams) {}\r\n\r\n  ngOnInit() {\r\n    this.repos = this.github.getReposForOrg(this.params.get('org'));\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/components/repo-list/repo-list.ts\n **/","import {Injectable} from '@angular/core';\r\nimport {Http, URLSearchParams} from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class Github {\r\n  constructor(private http: Http) {}\r\n\r\n  getOrg(org: string) {\r\n    return this.makeRequest(`orgs/${org}`);\r\n  }\r\n\r\n  getReposForOrg(org: string) {\r\n    return this.makeRequest(`orgs/${org}/repos`);\r\n  }\r\n\r\n  getRepoForOrg(org: string, repo: string) {\r\n    return this.makeRequest(`repos/${org}/${repo}`);\r\n  }\r\n\r\n  private makeRequest(path: string) {\r\n    let params = new URLSearchParams();\r\n    params.set('per_page', '100');\r\n\r\n    let url = `https://api.github.com/${ path }`;\r\n    return this.http.get(url, {search: params})\r\n      .map((res) => res.json());\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/github.ts\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/map.js\n ** module id = 339\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/map.js\n ** module id = 340\n ** module chunks = 0\n **/","import {Component} from '@angular/core';\r\nimport {RouteParams, ROUTER_DIRECTIVES} from '@angular/router-deprecated';\r\nimport {Http} from '@angular/http';\r\nimport {Github} from '../../services/github';\r\n\r\n@Component({\r\n  selector: 'repo-detail',\r\n  templateUrl: '/app/components/repo-detail/repo-detail.html',\r\n  styleUrls: ['/app/components/repo-detail/repo-detail.css'],\r\n  providers: [],\r\n  directives: [ ROUTER_DIRECTIVES ],\r\n  pipes: []\r\n})\r\nexport class RepoDetail {\r\n  repoDetails = {};\r\n  constructor(public routeParams: RouteParams, public github: Github) {}\r\n\r\n  ngOnInit() {\r\n    this.github.getRepoForOrg(this.routeParams.get('org'), this.routeParams.get('name'))\r\n      .subscribe(repoDetails => {\r\n        this.repoDetails = repoDetails;\r\n      });\r\n\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/components/repo-detail/repo-detail.ts\n **/"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChBA;AACA;AAEA;AACA;AACA;AAcA;AAEA;AAAA;AAdA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAKA;AAAA;AAJA;;;;;;;;;;;;;;;;;;ACnBA;AAUA;AAEA;AAAA;AAEA;AAEA;AAdA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AASA;AAAA;AARA;;;;;;;;;;;;;;;;;;ACVA;AACA;AAWA;AAEA;AAEA;AAEA;AAEA;AAhBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAUA;AAAA;AATA;;;;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AACA;AACA;AAcA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAtBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAaA;AAAA;AAZA;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAEA;AAUA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAdA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAQA;AAAA;AAPA;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAvBA;AAAA;;AAAA;AAwBA;AAAA;AAvBA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrFA;AACA;AAEA;AAUA;AAEA;AAAA;AAAA;AADA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAlBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAaA;AAAA;AAZA;;;;;","sourceRoot":""}